'SUDOKU SOLVER
*&H100


>INPUT
MOVE <SCREEN 13
COPY 13 14
REFR


>INPUT_LOOP
;@BTN
G 0 'GET BUTTON
JEI #A 0 <SOLVE_START 'SOLVE?

;@@TOUCH 'GET TOUCHED CHAR
REC _01
JEI 1 1 <CHOOSE 'TOUCH?
JUMP <INPUT_LOOP

>CHOOSE
;@@TOUCH
REC _45
JNI 0 5 <CHOOSE 'AWAIT STYLUS LIFT
COPY 0 4
SUBR 14 0 = % 'CORRECT SCREEN OFFSET
I <LOOKUP
I 81
R 0
;@SFFIND 'TRY TO FIND TOUCH POINT IN LOOKUP
REC _23 'GET RESULT
SUBI <LOOKUP 2 = % 'GET LOOKUP INDEX
JEI 0 3 <INPUT 'INVALID?
STOREIR ! 4 'INDICATE CHOOSE SPOT
;@14
REFR
;@GETKEY 'GET SUDOKU NUMBER
;@D_I 'CONVERT TO INTEGER
G 4 'GET INTEGER
JLI+ 9 4 <INVALID '9<N?
FUNC _24 <VALIDATE
JEI 0 .11 <INVALID 'INVALID?

>FINISH
FUNC _24 <WRITE_DIGIT

JUMP <INPUT

>INVALID
MOVE 0 4 'TREATED THE SAME AS ZERO
JUMP <FINISH

'UPDATE MATRIX AND SCREEN

>WRITE_DIGIT
PR _012 _01
ISTORER 1 0 <MATRIX 'STORE
ILOADR <LOOKUP 0 2 'GET LOOKUP
FUNC _1 ;@I_D 'CONVERT TO DIGIT
JNI 0 1 <WD_ZEROSKIP 'ZERO?
'ZERO, REPLACE WITH SPACE
MOVE 32 ,11

>WD_ZEROSKIP
ISTORER .11 2 <SCREEN
EXIT _012


'VALIDATE
'DETERMINES IF A NUMBER "FITS" IN A SPOT BY SUDOKU RULES
'INDEX,NUMBER -> VALIDITY
>VALIDATE
PR _012345 _01
'R0=INDEX
'R1=NUMBER

'VALIDATE COLUMN
'FIND COLUMN
DIVI 9 0 2 % 'GET R0%9

>VL_XLOOP
JER 2 0 <VLX_SELFSKIP 'SKIP MYSELF?
ILOADR <MATRIX 2 3 'GET DIGIT
JER 1 3 <V_INVALID 'INVALID?

>VLX_SELFSKIP
ADDI 9 2 = % 'ADVANCE COLUMN INDEX
JGI+ 81 2 <VL_XLOOP '81>C INDEX?

'NOW VALID ON COLUMN

DIVI 9 0 % 2 'GET R0/9
MULI 9 2 = = 'GET START INDEX
ADDI 9 2 4 % 'GET END INDEX

>VL_YLOOP
JER 2 0 <VLY_SELFSKIP 'SKIP MYSELF?
ILOADR <MATRIX 2 3 'GET DIGIT
JER 1 3 <V_INVALID 'INVALID?

>VLY_SELFSKIP
'INC 2 'ADVANCE INDEX
JGR+ 4 }2 <VL_YLOOP 'REPEAT UNTIL END INDEX

'NOW VALID ON ROW

'NOW VALIDATE ON BOX

>VL_BSTART
DIVI 9 0 2 3 'R2=COLUMN, R3=ROW
DIVI 3 2 = =
MULI 3 2 = = 'ROUND COL TO 3
DIVI 3 3 = =
MULI 27 3 = = 'ROUND AND BRING UP ROW
ADDR 3 2 = % 'ADD IN ROW TO MAKE START INDEX
MOVE 0 3 'R3=INDEX LOOKUP COUNTER
MOVE 0 4 'R4=DERIVED INDEX

>VL_BLOOP
ILOADR <BOXLOOKUP 3 4 'GET BOX LOOKUP
ADDR 2 4 = % 'ADD IN STARTING INDEX
JER 4 0 <VLB_SELFSKIP 'SKIP MYSELF?
ILOADR <MATRIX 4 5 'GET DIGIT
JER 1 5 <V_INVALID 'INVALID?

>VLB_SELFSKIP
JGI+ 9 }3 <VL_BLOOP 'REPEAT UNTIL END OF BOX

>V_VALID
I 1
EXIT _012345

>V_INVALID
I 0 'INVALID!
EXIT _012345

'VALIDATE JUST SUBGRID BOXES

>BVALIDATE
PR _012345 _01
JUMP <VL_BSTART


>SOLVE_START
STOREIM ! <STATUS
MOVE &H100 14
REFR
<INFER
<SOLVE
REFR
HALT

>SOLVE
PE _012
MOVE 0 0 'R0=INDEX COUNTER

>S_LOOP
ILOADR <MATRIX 0 2 'GET CURRENT SPOT
JNI 0 2 <S_SKIP 'NOT BLANK?

MOVE 1 1 'R1=DIGIT COUNTER

>S_DLOOP
FUNC _01 <VALIDATE 'CHECK IF POSSIBLE

JEI 0 .11 <S_NOTPOSSIBLE 'NOT POSSIBLE?

FUNC _01 <WRITE_DIGIT 'WRITE DIGIT

MOVE 0 <TURNFLAG 'CLEAR THE TURN FLAG
<SOLVE 'RECURSIVE CALL

R 0
I 0
<WRITE_DIGIT 'ERASE CURRENT DIGIT

JEI 1 <TURNFLAG <S_NOTPOSSIBLE 'SKIP RF?

'ANIMATED INDICATOR
R 0
I !
<MARK
REFR
R 0
<UNMARK

MOVE 1 <TURNFLAG 'SET THE TURN FLAG

>S_NOTPOSSIBLE

JGI+ 10 }1 <S_DLOOP 'REPEAT FOR ALL DIGITS

EXIT _012

>S_SKIP

JGI+ 81 }0 <S_LOOP 'REPEAT FOR ALL SQUARES

REFR

;@RBTN 'REQUIRE BUTTON BEFORE SHOWING NEXT
;@X 'SOLUTION

EXIT _012

>INFER
PE _0123456

>I_REPEAT

MOVE 0 0 'R0=INDEX COUNTER
MOVE 0 5 'R5=I/H REPEAT FLAG
MOVE 0 6 'R6=META REPEAT FLAG

>I_LOOP
ILOADR <MATRIX 0 2 'GET CURRENT SPOT
JNI 0 2 <I_SKIP 'NOT BLANK?

MOVE 1 1 'R1=DIGIT COUNTER
MOVE 0 3 'CANDIDATE DIGIT

>I_DLOOP

FUNC _01 <VALIDATE
JEI 0 .11 <I_NOTPOSSIBLE
JNI 0 3 <I_SKIP 'MORE THAN TWO CANDIDATES?
COPY 1 3 'SET NEW CANDIDATE

'ANIMATED INDICATOR
S _01
ADDI !0 .11 = % 'CREATE NUMBER INDICATOR
<MARK
REFR
R 0
<UNMARK

>I_NOTPOSSIBLE
JGI+ 10 }1 <I_DLOOP 'REPEAT FOR ALL DIGITS

JEI 10 1 <I_SKIP 'ALLOW IMPOSSIBLE PUZZLES

FUNC _03 <WRITE_DIGIT 'WRITE DIGIT

REFR

MOVE 1 5 'SET REPEAT FLAG
MOVE 1 6 'SET META FLAG

>I_SKIP

JGI+ 81 }0 <I_LOOP 'REPEAT FOR ALL SQUARES

JNI 0 5 <I_REPEAT 'KEEP FILLING IN CLUES

>H_REPEAT

'FIND HIDDEN SINGLES
'R0=BOX INDEX
'R1=CELL INDEX
'R2=OVERALL INDEX
'R3=CANDIDATE DIGIT
'R4=CANDIDATE INDEX

'FOR EACH GRID
'FOR EACH DIGIT
'CHECK IF IT FITS IN GRID ONLY ONCE
'IF IT DOES, WRITE IT IN

MOVE 0 0 'RESET BOX INDEX
MOVE 0 5 'RESET REPEAT FLAG

>H_GRIDLOOP
MOVE 1 3 'RESET CANDIDATE DIGIT

>H_DIGITLOOP
MOVE 0 1 'RESET CELL INDEX
MOVE -1 4 'RESET CANDIDATE INDEX

>H_CELLLOOP
'DETERMINE IF CANDIDATE DIGIT CAN FIT
ILOADR <BOXPLACES 0 .11
ILOADR <BOXLOOKUP 1 .11
ADDR .11 = 2 % 'CREATE OVERALL INDEX

'R2 IS NOW CELL TO CHECK
ILOADR <MATRIX 2 .11
JNI 0 .11 <H_CELLSKIP 'NON ZERO?

FUNC _23 <BVALIDATE 'SKIP DIGITS IN BOX ALREADY
JEI 0 .11 <H_DIGITSKIP 'INVALID DIGIT?

'CELL IS ZERO, CHECK OUR DIGIT FITS
FUNC _23 <VALIDATE
JEI 1 .11 <H_VALID 'VALID?

>H_CELLSKIP
JGI+ 9 }1 <H_CELLLOOP 'CONTINUE CELL LOOP

'IF R4 IS POSITIVE, IT'S A HIDDEN SINGLE
JGI- 0 4 <H_DIGITSKIP 'SKIP?

R 4
R 3
<WRITE_DIGIT
REFR 'WRITE HIDDEN SINGLE
MOVE 1 5 'SET REPEAT FLAG
MOVE 1 6 'SET META FLAG

>H_DIGITSKIP
JGI+ 10 }3 <H_DIGITLOOP 'CONTINUE DIGIT LOOP

>H_GRIDSKIP
JGI+ 9 }0 <H_GRIDLOOP

JNI 0 5 <H_REPEAT 'KEEP FILLING IN CLUES
JNI 0 6 <I_REPEAT 'KEEP FILLING IN CLUES


EXIT _0123456

>H_VALID
JNI -1 4 <H_NOTNEW
COPY 2 4 'COPY INDEX INTO CANDIDATE POS

'ANIMATED INDICATOR
S _23
ADDI ! .11 = % 'CREATE NUMBER INDICATOR
<MARK
REFR
R 2
<UNMARK

JUMP <H_CELLSKIP 'RESUME

>H_NOTNEW
JUMP <H_DIGITSKIP 'RESUME

>MARK
PR _012 _01
ILOADR <LOOKUP 0 2 'GET LOOKUP
ISTORER 1 2 <SCREEN
EXIT _012

>UNMARK
PR _0 _0
ILOADR <LOOKUP 0 = 'GET LOOKUP
I 0
ISTORER .11 0 <SCREEN 'ERASE MARK
EXIT _0

'BLANK



'DATA
>TURNFLAG 0 'TURN FLAG FOR ANIMATING SOLVER
>BOXLOOKUP 'ADD THESE TO GET BOX NEIGHBOURS
0  1  2
9  10 11
18 19 20

>BOXPLACES 'WHERE THE BOXES ARE
0  3  6
27 30 33
54 57 60

>MATRIX 'WHERE THE NUMBERS GO
+81

>LOOKUP 'TRANSLATE INDICES TO POSITIONS
&HEA
&HEB
&HEC

&HEE
&HEF
&HF0

&HF2
&HF3
&HF4

&H10A
&H10B
&H10C

&H10E
&H10F
&H110

&H112
&H113
&H114

&H12A
&H12B
&H12C

&H12E
&H12F
&H130

&H132
&H133
&H134




&H16A
&H16B
&H16C

&H16E
&H16F
&H170

&H172
&H173
&H174

&H18A
&H18B
&H18C

&H18E
&H18F
&H190

&H192
&H193
&H194

&H1AA
&H1AB
&H1AC

&H1AE
&H1AF
&H1B0

&H1B2
&H1B3
&H1B4



&H1EA
&H1EB
&H1EC

&H1EE
&H1EF
&H1F0

&H1F2
&H1F3
&H1F4

&H20A
&H20B
&H20C

&H20E
&H20F
&H210

&H212
&H213
&H214

&H22A
&H22B
&H22C

&H22E
&H22F
&H230

&H232
&H233
&H234

0

>SCREEN
$                    
$                     
$   
$      
$  
$                         
$                   
$                            
$                            
$                            
$                   
$                            
$                            
$                            
$                   
$                            
$                            
$                            
$                   
$                            
$                            
$                            
$                            
$                            
>STATUS
$

